# Go to smee.io to generate a URL here
SMEE_URL=https://smee.io/CHANGEME

# Optionally customize redis host (local test server defined in docker-compose.yml)
REDIS_HOST=rq-server

# Optionally customize redis port
REDIS_PORT=6379

# Base of pr binaries mirror
PR_BINARIES_MIRROR_BASE_URL=s3://spack-binaries-prs/testing

# Name of expected base branch (we react to PRs merged to this branch)
PR_BINARIES_BASE_BRANCH=develop

# Number of days to keep shared PR binaries in mirror
SHARED_PR_MIRROR_RETIRE_AFTER_DAYS=7

# Optionally customize the name of the task queues
TASK_QUEUE_SHORT=devtasks
TASK_QUEUE_LONG=devtasks_long

# Set the worker task queue name, should match either the TASK_QUEUE_SHORT or TASK_QUEUE_LONG name
# this is done in the docker-compose.yml
# WORKER_TASK_QUEUE=devtasks

# Optionally configure time before jobs are killed and marked failed (in seconds, default 180s)
WORKER_JOB_TIMEOUT=21600

# For testing, don't send gitlab api requests to the production gitlab mirror
GITLAB_SPACK_PROJECT_URL=https://gitlab.spack.io/api/v4/projects/23

# Debug level (one of: "DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL")
SPACKBOT_LOG_LEVEL=WARNING

# You don't need to change this unless you change the docker-compose volumes
GITHUB_PRIVATE_KEY=/app/spackbot/spack-bot-develop.private-key.pem

# ID of the app on GitHub.
GITHUB_APP_IDENTIFIER=CHANGEME

# Account the app appears as.
GITHUB_APP_REQUESTER=CHANGEME

# Secret for webhooks, set when you configured the GitHub app.
GITHUB_WEBHOOK_SECRET=CHANGEME

# API token to trigger pipelines in Spack GitLab
GITLAB_TOKEN=CHANGEME

# A custom name for spackbot
SPACKBOT_NAME="@spackbot"
